name: Publish to Nexus maven.vps.rodrigor.com

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Set up Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>projetos</id>  <!-- Certifique-se que o ID é igual ao pom.xml -->
                      <username>${{ secrets.NEXUS_USERNAME }}</username>
                      <password>${{ secrets.NEXUS_PASSWORD }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml

      # Etapa: Obter a versão da tag do GitHub e atualizar o pom.xml
      - name: Update POM version from GitHub tag
        run: |
          TAG_NAME="${{ github.ref_name }}"  # Obtém a tag da referência
          echo "Tag name from GitHub: $TAG_NAME"
          
          # Atualiza a versão no pom.xml de acordo com a tag
          sed -i "s/<version>.*<\/version>/<version>$TAG_NAME<\/version>/g" pom.xml
          
          # Exibe o arquivo pom.xml para verificação
          echo " -------------  POM.XML 30 primeiras linhas: ------------"
          head 30 pom.xml
          
      # Etapa: Commit da alteração no pom.xml para ambos release e snapshot
      - name: Commit updated POM version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add pom.xml
          git commit -m "Github Action: Atualiza versão do POM automaticamente: ${{ github.ref_name }}"
          git push origin HEAD:main

      - name: Check version type (Snapshot or Release)
        id: version-check
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Project version: $VERSION"
          if [[ "$VERSION" == *-SNAPSHOT ]]; then
            echo "::set-output name=is-snapshot::true"
          else
            echo "::set-output name=is-snapshot::false"
          fi

      - name: Deploy to Nexus
        run: |
          if [ "${{ steps.version-check.outputs.is-snapshot }}" == "true" ]; then
            echo "Deploying Snapshot"
            mvn clean deploy -P snapshot
          else
            echo "Deploying Release"
            mvn clean deploy -P release
          fi
