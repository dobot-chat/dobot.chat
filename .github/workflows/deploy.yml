name: Publish to Nexus

on:
  push:
    tags:
      - '*-SNAPSHOT'  # Para snapshots
      - 'v*'          # Para releases com prefixo "v" (por exemplo, v1.0.0)
  release:
    types: [published] # Dispara também quando houver releases publicados no GitHub

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Set up Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>projetos</id>  <!-- Certifique-se que o ID � igual ao pom.xml -->
                      <username>${{ secrets.NEXUS_USERNAME }}</username>
                      <password>${{ secrets.NEXUS_PASSWORD }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml

      - name: Check version type (Snapshot or Release)
        id: version-check
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Project version: $VERSION"
          if [[ "$VERSION" == *-SNAPSHOT ]]; then
            echo "::set-output name=is-snapshot::true"
          else
            echo "::set-output name=is-snapshot::false"
          fi

      - name: Deploy to Nexus
        run: |
          if [ "${{ steps.version-check.outputs.is-snapshot }}" == "true" ]; then
            echo "Deploying Snapshot"
            mvn clean deploy -P snapshot
          else
            echo "Deploying Release"
            mvn clean deploy -P release
          fi
